worker_processes  auto;
worker_rlimit_nofile 50000;

events {
    worker_connections  16000;
}

rtmp {
        server {
                listen 1935;

                chunk_size 2048;

                application live {
			
                        live on;

                        record all;
						record_path /tmp/rec;
						record_suffix -%d-%b-%y-%T.flv;

                        wait_video on;

                        hls on;
                        hls_path /tmp/hls/;
                        hls_fragment 5;
                        hls_playlist_length 30;

                        on_publish http://localhost:3001/stream;
                        notify_method post;

						# ここに追加したい分だけのサーバーを記載
						push rtmp://232.xxx.xxx:1935/live;

                }
        }
}

http {
	# バッファ最適化の設定
    	sendfile on;               # カーネルによるデータ転送の有効化
    	tcp_nopush on;             # TCPパケットをまとめて送信
    	tcp_nodelay on;            # 小さなパケットの即時送信
    	directio 512;              # 大規模ファイルのI/O最適化
	client_body_buffer_size 128k;
	client_max_body_size 100M;

	# CloudflareのIPレンジから取得する
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 103.21.244.0/22;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 103.31.4.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 190.93.240.0/20;
	set_real_ip_from 188.114.96.0/20;
	set_real_ip_from 197.234.240.0/22;
	set_real_ip_from 198.41.128.0/17;
	set_real_ip_from 162.158.0.0/15;
	set_real_ip_from 104.16.0.0/13;
	set_real_ip_from 104.24.0.0/14;
	set_real_ip_from 172.64.0.0/13;
	set_real_ip_from 131.0.72.0/22;
	set_real_ip_from 2400:cb00::/32;
	set_real_ip_from 2606:4700::/32;
	set_real_ip_from 2803:f800::/32;
	set_real_ip_from 2405:b500::/32;
	set_real_ip_from 2405:8100::/32;
	set_real_ip_from 2a06:98c0::/29;
	set_real_ip_from 2c0f:f248::/32;

	# CloudflareのクライアントIPを取得するためのヘッダーを設定
	real_ip_header CF-Connecting-IP;

	# Upstreamの設定
	upstream hls_streams {
		# メインサーバー
		server 127.0.0.1 weight=3; 
		# ここにPushで記載したサーバーを追加する
		server 232.xxx.xxx max_fails=2 fail_timeout=5s;
	}

	log_format proxy_log '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$upstream_addr"';
	 access_log /usr/local/nginx/logs/access.log proxy_log;

	server {
		listen 80;
		server_name hls.example.com;

		# .m3u8ファイルのハンドリング
		location ~* ^/hls/(.+\.m3u8)$ {
			proxy_pass http://hls_streams;
			root /tmp/;

			types { application/vnd.apple.mpegurl m3u8; }
			
			add_header Cache-Control "public, max-age=15";
			add_header Pragma "no-cache";
			add_header Access-Control-Allow-Origin *;
			
			proxy_hide_header Access-Control-Allow-Origin;
			proxy_hide_header Cache-Control;
			
		}

		# .tsファイルのハンドリング
		location ~* ^/hls/(.+\.ts)$ {
			proxy_pass http://hls_streams;
			root /tmp/;

			types { video/mp2t ts; }
			add_header Cache-Control "public, max-age=10";
			add_header Access-Control-Allow-Origin *;
			proxy_hide_header Cache-Control;
			proxy_hide_header Access-Control-Allow-Origin;
			
		}
	}
	

	server {
		listen 80;
		server_name example.com;

		location / {
		    # Express.jsアプリケーションへのプロキシ設定
		    proxy_pass http://localhost:3000;
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection 'upgrade';
		    proxy_set_header Host $host;

		    # クライアントのIPアドレスを取得
		    proxy_set_header X-Real-IP $http_cf_connecting_ip;
		    proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_cache_bypass $http_upgrade;
		}
	}

    # Backendサーバーの設定
    server {
        listen 80;
        server_name api.example.com;

        location / {
            # Express.jsアプリケーションへのプロキシ設定
            proxy_pass http://localhost:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

            # クライアントのIPアドレスを取得
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }

}
